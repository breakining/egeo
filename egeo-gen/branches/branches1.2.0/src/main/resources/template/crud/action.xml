<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>action</name>
	<filePath>back-${module}/back-${module}-web/src/main/java/com/egeo/back/${module}/web/action/</filePath>
	<fileName>${className}Action.java</fileName>
	<content><![CDATA[package com.egeo.back.${module}.web.action;


import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.egeo.back.${module}.business.${className}Manage;
import com.egeo.back.${module}.converter.${className}Converter;
import com.egeo.back.${module}.model.vo.${className}VO;
import com.egeo.basics.${module}.model.dto.${className}DTO;
import com.egeo.core.common.PageResult;
import com.egeo.core.orm.Pagination;
import com.egeo.core.web.BaseSpringController;
import com.egeo.core.web.JsonResult;
import com.egeo.utils.EmptyUtil;



@Controller
@RequestMapping("${module}/${name}")
public class ${className}Action extends BaseSpringController {
	
	@Resource(name="${name}")
	private ${className}Manage ${name}Manage;


#if(${findById})	
	// 业务方法：
	@RequestMapping(value = "/find${className}ById")
	@ResponseBody
	public JsonResult<${className}VO> find${className}ById(Long id ) {
		
		${className}DTO dto = new ${className}DTO();
		dto.setId(id);
		${className}DTO rt = ${name}Manage.find${className}ById(dto);		
		return success(${className}Converter.toVO(rt));
					 
	}
#end


#set($hasPlatformId = false)
#foreach(${field} in ${fields})
#if(${field.name} == "platformId")
#set($hasPlatformId = true)
#end
#end

#if(${findAll})	
	// 业务方法：
	@RequestMapping(value = "/find${className}All")
	@ResponseBody
	public JsonResult<List<${className}VO>> find${className}All(${className}VO vo,HttpServletRequest req ) {
		${className}DTO dto = ${className}Converter.toDTO(vo);
#if($hasPlatformId)	
		String str = req.getHeader("platformId");		
		if(EmptyUtil.isNotEmpty(str)){
			Long platformId = Long.valueOf(str);
			dto.setPlatformId(platformId);
		}
#end		
		List<${className}DTO> rt = ${name}Manage.find${className}All(dto);	
		return success(${className}Converter.toVO(rt));
					 
	}	
#end

#if(${findOfPage})		
	// 业务方法：
	@RequestMapping(value = "/find${className}OfPage")
	@ResponseBody
	public JsonResult<PageResult<${className}VO>> find${className}OfPage(${className}VO vo,Pagination page,HttpServletRequest req ) {
		${className}DTO dto = ${className}Converter.toDTO(vo);
#if($hasPlatformId)	
		String str = req.getHeader("platformId");		
		if(EmptyUtil.isNotEmpty(str)){
			Long platformId = Long.valueOf(str);
			dto.setPlatformId(platformId);
		}
#end
		PageResult<${className}DTO> rt = ${name}Manage.find${className}OfPage(dto, page);
        List<${className}VO> list = ${className}Converter.toVO(rt.getList());
        PageResult<${className}VO> result = new PageResult<${className}VO>();
        result.setList(list);
        result.setPageNo(rt.getPageNo());
        result.setPageSize(rt.getPageSize());
        result.setTotalSize(rt.getTotalSize());
		
		return success(result);
					 
	}
#end


#if(${insert})	
	// 业务方法：返回是插入行的id
	@RequestMapping(value = "/insert${className}WithTx")
	@ResponseBody
	public JsonResult<Long> insert${className}WithTx(${className}VO vo,HttpServletRequest req ) {
		${className}DTO dto = ${className}Converter.toDTO(vo);
#if($hasPlatformId)	
		String str = req.getHeader("platformId");		
		if(EmptyUtil.isNotEmpty(str)){
			Long platformId = Long.valueOf(str);
			dto.setPlatformId(platformId);
		}
#end
		Long rt = ${name}Manage.insert${className}WithTx(dto);	
		return success(rt);					 
	}
#end
	
#if(${update})	
	// 业务方法：根据id更新数据
	@RequestMapping(value = "/update${className}ByIdWithTx")
	@ResponseBody
	public JsonResult<Integer> update${className}ByIdWithTx(${className}VO vo,HttpServletRequest req ) {
		${className}DTO dto = ${className}Converter.toDTO(vo);
#if($hasPlatformId)	
		String str = req.getHeader("platformId");		
		if(EmptyUtil.isNotEmpty(str)){
			Long platformId = Long.valueOf(str);
			dto.setPlatformId(platformId);
		}
#end
		int rt = ${name}Manage.update${className}WithTx(dto);	
		return success(rt);					 
	}
#end	

#if(${delete})	
	// 业务方法：
	@RequestMapping(value = "/delete${className}WithTx")
	@ResponseBody
	public JsonResult<Integer> delete${className}WithTx(${className}VO vo,HttpServletRequest req ) {
		${className}DTO dto = ${className}Converter.toDTO(vo);
#if($hasPlatformId)	
		String str = req.getHeader("platformId");		
		if(EmptyUtil.isNotEmpty(str)){
			Long platformId = Long.valueOf(str);
			dto.setPlatformId(platformId);
		}
#end
		int rt = ${name}Manage.delete${className}WithTx(dto);	
		return success(rt);					 
	}
#end
		
}]]>
	</content>
</template>